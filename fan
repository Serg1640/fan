#
#
#
# """Данные расчет производительности вентилятора"""
#
# f1 = 50         # параметры электросети, Гц
# q_f1 = 9000     # производительность вентилятора при f1, м3/ч
# p1 = 8000       # давление при q_f1 и f1, Па
# n1 = 3000       # частота вращения двигателя вентилятора, об/мин
# # f2 = float(input('Введите тактовую частоту двигателя вентилятора, Гц - '))
# f2 = 40

"""Расчет производительности"""


# def frequency():
#     n2 = (f2*n1)/f1    # частота вращения двигателя вентилятора при , об/мин
#     q2 = round(q_f1 * (n2/n1), 0)
#     p2 = round(((n2/n1)**2)*p1, 0)
#     return [q2, p2]
#
# print(frequency())


class Consumption:

    def __init__(self, f2):
        self.f2 = f2

    def frequency(self):
        f1 = 50  # параметры электросети, Гц
        q_f1 = 9000  # производительность вентилятора при f1, м3/ч
        p1 = 8000  # давление при q_f1 и f1, Па
        n1 = 3000  # частота вращения двигателя вентилятора, об/мин
        n2 = (self.f2 * n1) / f1  # частота вращения двигателя вентилятора при , об/мин
        q2 = round(q_f1 * (n2 / n1), 0)
        p2 = round(((n2 / n1) ** 2) * p1, 0)
        return q2


l = []


for i in range(10, 51, 10):
    obg1 = Consumption(f2=i)
    # obg1.frequency()
    l.append(obg1.frequency())
print(l)


# obg1.frequency(f2=10)

# numbers = [12, 2, 3, 65, 2, 3, 5, 6]
#
# first, *other = numbers
